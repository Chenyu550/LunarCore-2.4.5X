// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedInt;

public final class ChessRogueQueryInfoOuterClass {
  /**
   * Protobuf type {@code ChessRogueQueryInfo}
   */
  public static final class ChessRogueQueryInfo extends ProtoMessage<ChessRogueQueryInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional .OFHBFINPHAG JNAGMIALOII = 3;</code>
     */
    private final OFHBFINPHAGOuterClass.OFHBFINPHAG jNAGMIALOII = OFHBFINPHAGOuterClass.OFHBFINPHAG.newInstance();

    /**
     * <code>optional .ChessRogueQuery query_info = 14;</code>
     */
    private final ChessRogueQueryOuterClass.ChessRogueQuery queryInfo = ChessRogueQueryOuterClass.ChessRogueQuery.newInstance();

    /**
     * <pre>
     * MAKPHMAOCHI talent_info = 11;
     * </pre>
     *
     * <code>repeated uint32 CMNHLKGFKOP = 4;</code>
     */
    private final RepeatedInt cMNHLKGFKOP = RepeatedInt.newEmptyInstance();

    /**
     * <pre>
     * CGAPFPHEJIA EEFGNNFCDNJ = 6;
     * CLIDPGPDFGK IKGPADCBBPN = 9;
     * </pre>
     *
     * <code>repeated uint32 PHJAFGJHOCO = 8;</code>
     */
    private final RepeatedInt pHJAFGJHOCO = RepeatedInt.newEmptyInstance();

    private ChessRogueQueryInfo() {
    }

    /**
     * @return a new empty instance of {@code ChessRogueQueryInfo}
     */
    public static ChessRogueQueryInfo newInstance() {
      return new ChessRogueQueryInfo();
    }

    /**
     * <code>optional .OFHBFINPHAG JNAGMIALOII = 3;</code>
     * @return whether the jNAGMIALOII field is set
     */
    public boolean hasJNAGMIALOII() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional .OFHBFINPHAG JNAGMIALOII = 3;</code>
     * @return this
     */
    public ChessRogueQueryInfo clearJNAGMIALOII() {
      bitField0_ &= ~0x00000001;
      jNAGMIALOII.clear();
      return this;
    }

    /**
     * <code>optional .OFHBFINPHAG JNAGMIALOII = 3;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableJNAGMIALOII()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public OFHBFINPHAGOuterClass.OFHBFINPHAG getJNAGMIALOII() {
      return jNAGMIALOII;
    }

    /**
     * <code>optional .OFHBFINPHAG JNAGMIALOII = 3;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public OFHBFINPHAGOuterClass.OFHBFINPHAG getMutableJNAGMIALOII() {
      bitField0_ |= 0x00000001;
      return jNAGMIALOII;
    }

    /**
     * <code>optional .OFHBFINPHAG JNAGMIALOII = 3;</code>
     * @param value the jNAGMIALOII to set
     * @return this
     */
    public ChessRogueQueryInfo setJNAGMIALOII(final OFHBFINPHAGOuterClass.OFHBFINPHAG value) {
      bitField0_ |= 0x00000001;
      jNAGMIALOII.copyFrom(value);
      return this;
    }

    /**
     * <code>optional .ChessRogueQuery query_info = 14;</code>
     * @return whether the queryInfo field is set
     */
    public boolean hasQueryInfo() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional .ChessRogueQuery query_info = 14;</code>
     * @return this
     */
    public ChessRogueQueryInfo clearQueryInfo() {
      bitField0_ &= ~0x00000002;
      queryInfo.clear();
      return this;
    }

    /**
     * <code>optional .ChessRogueQuery query_info = 14;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableQueryInfo()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public ChessRogueQueryOuterClass.ChessRogueQuery getQueryInfo() {
      return queryInfo;
    }

    /**
     * <code>optional .ChessRogueQuery query_info = 14;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public ChessRogueQueryOuterClass.ChessRogueQuery getMutableQueryInfo() {
      bitField0_ |= 0x00000002;
      return queryInfo;
    }

    /**
     * <code>optional .ChessRogueQuery query_info = 14;</code>
     * @param value the queryInfo to set
     * @return this
     */
    public ChessRogueQueryInfo setQueryInfo(final ChessRogueQueryOuterClass.ChessRogueQuery value) {
      bitField0_ |= 0x00000002;
      queryInfo.copyFrom(value);
      return this;
    }

    /**
     * <pre>
     * MAKPHMAOCHI talent_info = 11;
     * </pre>
     *
     * <code>repeated uint32 CMNHLKGFKOP = 4;</code>
     * @return whether the cMNHLKGFKOP field is set
     */
    public boolean hasCMNHLKGFKOP() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <pre>
     * MAKPHMAOCHI talent_info = 11;
     * </pre>
     *
     * <code>repeated uint32 CMNHLKGFKOP = 4;</code>
     * @return this
     */
    public ChessRogueQueryInfo clearCMNHLKGFKOP() {
      bitField0_ &= ~0x00000004;
      cMNHLKGFKOP.clear();
      return this;
    }

    /**
     * <pre>
     * MAKPHMAOCHI talent_info = 11;
     * </pre>
     *
     * <code>repeated uint32 CMNHLKGFKOP = 4;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableCMNHLKGFKOP()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedInt getCMNHLKGFKOP() {
      return cMNHLKGFKOP;
    }

    /**
     * <pre>
     * MAKPHMAOCHI talent_info = 11;
     * </pre>
     *
     * <code>repeated uint32 CMNHLKGFKOP = 4;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedInt getMutableCMNHLKGFKOP() {
      bitField0_ |= 0x00000004;
      return cMNHLKGFKOP;
    }

    /**
     * <pre>
     * MAKPHMAOCHI talent_info = 11;
     * </pre>
     *
     * <code>repeated uint32 CMNHLKGFKOP = 4;</code>
     * @param value the cMNHLKGFKOP to add
     * @return this
     */
    public ChessRogueQueryInfo addCMNHLKGFKOP(final int value) {
      bitField0_ |= 0x00000004;
      cMNHLKGFKOP.add(value);
      return this;
    }

    /**
     * <pre>
     * MAKPHMAOCHI talent_info = 11;
     * </pre>
     *
     * <code>repeated uint32 CMNHLKGFKOP = 4;</code>
     * @param values the cMNHLKGFKOP to add
     * @return this
     */
    public ChessRogueQueryInfo addAllCMNHLKGFKOP(final int... values) {
      bitField0_ |= 0x00000004;
      cMNHLKGFKOP.addAll(values);
      return this;
    }

    /**
     * <pre>
     * CGAPFPHEJIA EEFGNNFCDNJ = 6;
     * CLIDPGPDFGK IKGPADCBBPN = 9;
     * </pre>
     *
     * <code>repeated uint32 PHJAFGJHOCO = 8;</code>
     * @return whether the pHJAFGJHOCO field is set
     */
    public boolean hasPHJAFGJHOCO() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <pre>
     * CGAPFPHEJIA EEFGNNFCDNJ = 6;
     * CLIDPGPDFGK IKGPADCBBPN = 9;
     * </pre>
     *
     * <code>repeated uint32 PHJAFGJHOCO = 8;</code>
     * @return this
     */
    public ChessRogueQueryInfo clearPHJAFGJHOCO() {
      bitField0_ &= ~0x00000008;
      pHJAFGJHOCO.clear();
      return this;
    }

    /**
     * <pre>
     * CGAPFPHEJIA EEFGNNFCDNJ = 6;
     * CLIDPGPDFGK IKGPADCBBPN = 9;
     * </pre>
     *
     * <code>repeated uint32 PHJAFGJHOCO = 8;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutablePHJAFGJHOCO()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedInt getPHJAFGJHOCO() {
      return pHJAFGJHOCO;
    }

    /**
     * <pre>
     * CGAPFPHEJIA EEFGNNFCDNJ = 6;
     * CLIDPGPDFGK IKGPADCBBPN = 9;
     * </pre>
     *
     * <code>repeated uint32 PHJAFGJHOCO = 8;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedInt getMutablePHJAFGJHOCO() {
      bitField0_ |= 0x00000008;
      return pHJAFGJHOCO;
    }

    /**
     * <pre>
     * CGAPFPHEJIA EEFGNNFCDNJ = 6;
     * CLIDPGPDFGK IKGPADCBBPN = 9;
     * </pre>
     *
     * <code>repeated uint32 PHJAFGJHOCO = 8;</code>
     * @param value the pHJAFGJHOCO to add
     * @return this
     */
    public ChessRogueQueryInfo addPHJAFGJHOCO(final int value) {
      bitField0_ |= 0x00000008;
      pHJAFGJHOCO.add(value);
      return this;
    }

    /**
     * <pre>
     * CGAPFPHEJIA EEFGNNFCDNJ = 6;
     * CLIDPGPDFGK IKGPADCBBPN = 9;
     * </pre>
     *
     * <code>repeated uint32 PHJAFGJHOCO = 8;</code>
     * @param values the pHJAFGJHOCO to add
     * @return this
     */
    public ChessRogueQueryInfo addAllPHJAFGJHOCO(final int... values) {
      bitField0_ |= 0x00000008;
      pHJAFGJHOCO.addAll(values);
      return this;
    }

    @Override
    public ChessRogueQueryInfo copyFrom(final ChessRogueQueryInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        jNAGMIALOII.copyFrom(other.jNAGMIALOII);
        queryInfo.copyFrom(other.queryInfo);
        cMNHLKGFKOP.copyFrom(other.cMNHLKGFKOP);
        pHJAFGJHOCO.copyFrom(other.pHJAFGJHOCO);
      }
      return this;
    }

    @Override
    public ChessRogueQueryInfo mergeFrom(final ChessRogueQueryInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasJNAGMIALOII()) {
        getMutableJNAGMIALOII().mergeFrom(other.jNAGMIALOII);
      }
      if (other.hasQueryInfo()) {
        getMutableQueryInfo().mergeFrom(other.queryInfo);
      }
      if (other.hasCMNHLKGFKOP()) {
        getMutableCMNHLKGFKOP().addAll(other.cMNHLKGFKOP);
      }
      if (other.hasPHJAFGJHOCO()) {
        getMutablePHJAFGJHOCO().addAll(other.pHJAFGJHOCO);
      }
      return this;
    }

    @Override
    public ChessRogueQueryInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      jNAGMIALOII.clear();
      queryInfo.clear();
      cMNHLKGFKOP.clear();
      pHJAFGJHOCO.clear();
      return this;
    }

    @Override
    public ChessRogueQueryInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      jNAGMIALOII.clearQuick();
      queryInfo.clearQuick();
      cMNHLKGFKOP.clear();
      pHJAFGJHOCO.clear();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof ChessRogueQueryInfo)) {
        return false;
      }
      ChessRogueQueryInfo other = (ChessRogueQueryInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasJNAGMIALOII() || jNAGMIALOII.equals(other.jNAGMIALOII))
        && (!hasQueryInfo() || queryInfo.equals(other.queryInfo))
        && (!hasCMNHLKGFKOP() || cMNHLKGFKOP.equals(other.cMNHLKGFKOP))
        && (!hasPHJAFGJHOCO() || pHJAFGJHOCO.equals(other.pHJAFGJHOCO));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 26);
        output.writeMessageNoTag(jNAGMIALOII);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 114);
        output.writeMessageNoTag(queryInfo);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        for (int i = 0; i < cMNHLKGFKOP.length(); i++) {
          output.writeRawByte((byte) 32);
          output.writeUInt32NoTag(cMNHLKGFKOP.array()[i]);
        }
      }
      if ((bitField0_ & 0x00000008) != 0) {
        for (int i = 0; i < pHJAFGJHOCO.length(); i++) {
          output.writeRawByte((byte) 64);
          output.writeUInt32NoTag(pHJAFGJHOCO.array()[i]);
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(jNAGMIALOII);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(queryInfo);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += (1 * cMNHLKGFKOP.length()) + ProtoSink.computeRepeatedUInt32SizeNoTag(cMNHLKGFKOP);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += (1 * pHJAFGJHOCO.length()) + ProtoSink.computeRepeatedUInt32SizeNoTag(pHJAFGJHOCO);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public ChessRogueQueryInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 26: {
            // jNAGMIALOII
            input.readMessage(jNAGMIALOII);
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 114) {
              break;
            }
          }
          case 114: {
            // queryInfo
            input.readMessage(queryInfo);
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 34) {
              break;
            }
          }
          case 34: {
            // cMNHLKGFKOP [packed=true]
            input.readPackedUInt32(cMNHLKGFKOP, tag);
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 66) {
              break;
            }
          }
          case 66: {
            // pHJAFGJHOCO [packed=true]
            input.readPackedUInt32(pHJAFGJHOCO, tag);
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
          case 32: {
            // cMNHLKGFKOP [packed=false]
            tag = input.readRepeatedUInt32(cMNHLKGFKOP, tag);
            bitField0_ |= 0x00000004;
            break;
          }
          case 64: {
            // pHJAFGJHOCO [packed=false]
            tag = input.readRepeatedUInt32(pHJAFGJHOCO, tag);
            bitField0_ |= 0x00000008;
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeMessage(FieldNames.jNAGMIALOII, jNAGMIALOII);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeMessage(FieldNames.queryInfo, queryInfo);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRepeatedUInt32(FieldNames.cMNHLKGFKOP, cMNHLKGFKOP);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRepeatedUInt32(FieldNames.pHJAFGJHOCO, pHJAFGJHOCO);
      }
      output.endObject();
    }

    @Override
    public ChessRogueQueryInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1457066462: {
            if (input.isAtField(FieldNames.jNAGMIALOII)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(jNAGMIALOII);
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1807200874:
          case -168476219: {
            if (input.isAtField(FieldNames.queryInfo)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(queryInfo);
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 243189738: {
            if (input.isAtField(FieldNames.cMNHLKGFKOP)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedUInt32(cMNHLKGFKOP);
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1818568397: {
            if (input.isAtField(FieldNames.pHJAFGJHOCO)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedUInt32(pHJAFGJHOCO);
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public ChessRogueQueryInfo clone() {
      return new ChessRogueQueryInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static ChessRogueQueryInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new ChessRogueQueryInfo(), data).checkInitialized();
    }

    public static ChessRogueQueryInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new ChessRogueQueryInfo(), input).checkInitialized();
    }

    public static ChessRogueQueryInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new ChessRogueQueryInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating ChessRogueQueryInfo messages
     */
    public static MessageFactory<ChessRogueQueryInfo> getFactory() {
      return ChessRogueQueryInfoFactory.INSTANCE;
    }

    private enum ChessRogueQueryInfoFactory implements MessageFactory<ChessRogueQueryInfo> {
      INSTANCE;

      @Override
      public ChessRogueQueryInfo create() {
        return ChessRogueQueryInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName jNAGMIALOII = FieldName.forField("JNAGMIALOII");

      static final FieldName queryInfo = FieldName.forField("queryInfo", "query_info");

      static final FieldName cMNHLKGFKOP = FieldName.forField("CMNHLKGFKOP");

      static final FieldName pHJAFGJHOCO = FieldName.forField("PHJAFGJHOCO");
    }
  }
}
